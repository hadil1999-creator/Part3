{
  "Improper handling of ml api limits": "You are preprocessing source code to prepare it for ML service misuse analysis.\n\nInput code:\n{code_snippet}\n\nTask:\n- Keep ONLY:\n  • Lines that use or call ML services or ML APIs (e.g., API calls, client initialization, request handling).\n  • Any helper functions, variables, or imports that are strictly required for those calls to work.\n  • Existing file markers (lines starting with '# ===== File:').\n- Preserve the original structure of the code (do not invent new functions, classes, or variables).\n- Remove ALL unrelated or unused code.\n- Do not add or remove file markers.\n- Do not insert comments, explanations, or text such as 'deleted' or 'this will help'.\n- Output must be valid Python code that reflects only the filtered parts.\n- If nothing relevant remains in a file, keep only its file marker line.",

  "Ignoring monitoring data drift": "You are preprocessing source code to prepare it for ML service misuse analysis.\n\nInput code:\n{code_snippet}\n\nTask:\n- Keep ONLY:\n  • Code related to data ingestion, data preprocessing, and model input/output pipelines.\n  • Code related to monitoring, metrics collection, or evaluation of data/model performance.\n  • Imports, helper functions, and variables strictly required for the above.\n  • File markers (lines starting with '# ===== File:').\n- Preserve the original structure of the code (do not invent new code).\n- Remove ALL unrelated or unused code.\n- Do not add or remove file markers.\n- Do not insert explanations, placeholders, or comments.\n- Output must be valid Python code containing only the filtered parts.\n- If no relevant code remains in a file, keep only its file marker line.",

  "Ignoring testing schema mismatch": "You are preprocessing source code to prepare it for ML service misuse analysis.\n\nInput code:\n{code_snippet}\n\nTask:\n- Keep ONLY:\n  • Code related to data ingestion/loading for training, testing, or production datasets.\n  • Code that defines or validates schemas, feature sets, or data structure checks.\n  • Code related to model training, evaluation, or testing pipelines that depend on schema alignment.\n  • Imports, helper functions, and variables strictly required for the above.\n  • File markers (lines starting with '# ===== File:').\n- Preserve the original structure of the code (do not invent new code).\n- Remove ALL unrelated or unused code.\n- Do not add or remove file markers.\n- Do not insert explanations, placeholders, or comments.\n- Output must be valid Python code containing only the filtered parts.\n- If no relevant code remains in a file, keep only its file marker line."
}
